// Mocks generated by Mockito 5.4.6 from annotations
// in athkari/test/data/delete/delete_dekhair.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:athkari/app/core/services/app_database_services.dart' as _i6;
import 'package:athkari/app/features/categories/data/datasources/local/category_dao.dart'
    as _i4;
import 'package:athkari/app/features/daily_wered/data/datasources/local/daily_wered_dao.dart'
    as _i2;
import 'package:athkari/app/features/daily_wered/data/datasources/local/dhkar_dao.dart'
    as _i3;
import 'package:athkari/app/features/esnaad/data/datasources/esnad_dto.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDailyWeredDao_0 extends _i1.SmartFake implements _i2.DailyWeredDao {
  _FakeDailyWeredDao_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDhkarDao_1 extends _i1.SmartFake implements _i3.DhkarDao {
  _FakeDhkarDao_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCategoryDao_2 extends _i1.SmartFake implements _i4.CategoryDao {
  _FakeCategoryDao_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEsnadDao_3 extends _i1.SmartFake implements _i5.EsnadDao {
  _FakeEsnadDao_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppDataBaseServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDataBaseServices extends _i1.Mock
    implements _i6.AppDataBaseServices {
  MockAppDataBaseServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i8.Database?> get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _i7.Future<_i8.Database?>.value(),
      ) as _i7.Future<_i8.Database?>);

  @override
  _i2.DailyWeredDao get dailyWeredDao => (super.noSuchMethod(
        Invocation.getter(#dailyWeredDao),
        returnValue: _FakeDailyWeredDao_0(
          this,
          Invocation.getter(#dailyWeredDao),
        ),
      ) as _i2.DailyWeredDao);

  @override
  _i3.DhkarDao get adhkaiDao => (super.noSuchMethod(
        Invocation.getter(#adhkaiDao),
        returnValue: _FakeDhkarDao_1(
          this,
          Invocation.getter(#adhkaiDao),
        ),
      ) as _i3.DhkarDao);

  @override
  _i4.CategoryDao get categoryDao => (super.noSuchMethod(
        Invocation.getter(#categoryDao),
        returnValue: _FakeCategoryDao_2(
          this,
          Invocation.getter(#categoryDao),
        ),
      ) as _i4.CategoryDao);

  @override
  _i5.EsnadDao get esnadDao => (super.noSuchMethod(
        Invocation.getter(#esnadDao),
        returnValue: _FakeEsnadDao_3(
          this,
          Invocation.getter(#esnadDao),
        ),
      ) as _i5.EsnadDao);

  @override
  _i7.Future<void> clearAllTables() => (super.noSuchMethod(
        Invocation.method(
          #clearAllTables,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> seedDatabaseFromJson() => (super.noSuchMethod(
        Invocation.method(
          #seedDatabaseFromJson,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
