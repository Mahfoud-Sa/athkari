name: Build APK and Publish Release

on:
  push:
    tags:
      - 'v*' # Trigger on new version tags (e.g., v1.0.0)
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Find Gradle Wrapper
        id: find_gradlew
        run: |
          if [ -f "./gradlew" ]; then
            echo "GRADLEW_PATH=./gradlew" >> $GITHUB_OUTPUT
          elif [ -f "./app/gradlew" ]; then
            echo "GRADLEW_PATH=./app/gradlew" >> $GITHUB_OUTPUT
          else
            echo "Could not find gradlew file"
            exit 1
          fi

      - name: Make gradlew executable
        run: chmod +x ${{ steps.find_gradlew.outputs.GRADLEW_PATH }}

      - name: Build APK
        run: ${{ steps.find_gradlew.outputs.GRADLEW_PATH }} assembleRelease

      - name: Find APK file
        id: find_apk
        run: |
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            echo "APK_PATH=app/build/outputs/apk/release/app-release.apk" >> $GITHUB_OUTPUT
          elif [ -f "app/build/outputs/apk/release/*.apk" ]; then
            echo "APK_PATH=app/build/outputs/apk/release/*.apk" >> $GITHUB_OUTPUT
          else
            echo "Could not find APK file"
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ steps.find_apk.outputs.APK_PATH }}

  publish-release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get tag name
        id: get_tag
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          name: Release ${{ steps.get_tag.outputs.tag_name }}
          body: "Automated release for version ${{ steps.get_tag.outputs.tag_name }}"
          files: app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
