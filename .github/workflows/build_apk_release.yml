name: Flutter Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Locate Flutter project root
        id: locate_project
        run: |
          PUBSPEC_PATH=$(find . -name pubspec.yaml -type f -print -quit)
          if [ -z "$PUBSPEC_PATH" ]; then
            echo "::error::No pubspec.yaml found in repository!"
            echo "Repository structure:"
            find . -type d | sed 's|[^/]*/|- |g'
            exit 1
          fi
          echo "PROJECT_ROOT=$(dirname "$PUBSPEC_PATH")" >> $GITHUB_ENV
          echo "Found pubspec.yaml at: $PUBSPEC_PATH"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
        working-directory: ${{ env.PROJECT_ROOT }}

      - name: Get dependencies
        run: flutter pub get
        working-directory: ${{ env.PROJECT_ROOT }}

      - name: Build APK
        run: flutter build apk --release
        working-directory: ${{ env.PROJECT_ROOT }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_ROOT }}/build/app/outputs/flutter-apk/app-release.apk

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Locate Flutter project root
        id: locate_project
        run: |
          PUBSPEC_PATH=$(find . -name pubspec.yaml -type f -print -quit)
          echo "PROJECT_ROOT=$(dirname "$PUBSPEC_PATH")" >> $GITHUB_ENV
          echo "Found pubspec.yaml at: $PUBSPEC_PATH"

      - name: Extract version
        id: version
        run: |
          cd ${{ env.PROJECT_ROOT }}
          FULL_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"' | tr -d "'")
          BASE_VERSION=$(echo "$FULL_VERSION" | cut -d'+' -f1)
          echo "version=$BASE_VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $BASE_VERSION"

      - name: Create release tag
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag_name=v${{ steps.version.outputs.version }}m${{ github.run_number }}" >> $GITHUB_OUTPUT
          else
            echo "tag_name=v${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
          fi
          echo "Using tag: $(cat $GITHUB_OUTPUT | grep tag_name)"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Release ${{ steps.tag.outputs.tag_name }}
          body: |
            Flutter APK release
            Version: ${{ steps.tag.outputs.tag_name }}
            Build: ${{ github.run_number }}
          files: app-release.apk
